name: Run Minecraft Server

on:
  push:
    branches: [master]

jobs:
  Mine_server:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 22 (OpenJDK)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '22'

      # Add this step to confirm the Java version
      - name: Check Java Version
        run: java -version

      - name: Check public IP address using curl
        run: |
          echo "Fetching public IP address..."
          curl ifconfig.me
          sudo ufw status
          sudo ufw allow 25565/tcp
      
      # - name: Disable UFW firewall
      #   run: sudo ufw disable

      # Congifure git to commit to the Repo    
      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      - name: Install screen
        run: sudo apt-get update && sudo apt-get install screen

      - name: Install Ngrok
        run: |
         curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
         echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list >/dev/null
         sudo apt-get update && sudo apt-get install ngrok
        
      - name: Authenticate and Start Ngrok
        run: |
         ngrok authtoken ${{ secrets.AUTH_NGROK }}  # Using the ngrok auth saved in secrets
         nohup ngrok http --url=dassie-open-optionally.ngrok-free.app 8080 > /dev/null 2>&1 &
         sleep 5  # Wait for Ngrok to initialize

      - name: Get Ngrok URL
        run: |
         NGROK_TCP_URL=$(curl --silent http://127.0.0.1:4040/api/tunnels | jq -r .tunnels[0].public_url)
         echo "Ngrok Address: $NGROK_TCP_URL"

      - name: Install dependencies
        run: sudo apt-get install gcc make
    
      - name: Download and compile mcrcon
        run: |
          wget https://github.com/Tiiffi/mcrcon/archive/refs/heads/master.zip
          unzip -o master.zip
          cd mcrcon-master
          make
          sudo cp mcrcon /usr/local/bin/
      
      - name: Install shr and rcon
        run: |
          sudo cp /home/runner/work/Mine_server/Mine_server/shr /usr/local/bin/
          sudo chmod +x /usr/local/bin/shr
          sudo cp /home/runner/work/Mine_server/Mine_server/rcon /usr/local/bin/
          sudo chmod +x /usr/local/bin/rcon

      - name: Install filebrowser & Start
        run: |
          curl -fsSL https://raw.githubusercontent.com/filebrowser/get/master/get.sh | bash
          filebrowser --disable-exec=false > /home/runner/work/Mine_server/Mine_server/filebrowser.log 2>&1 &

      - name: Initialise Server save loop
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          screen -dms Save_loop bash -c 'chmod +x /home/runner/work/Mine_server/Mine_server/server_save_loop.sh; bash /home/runner/work/Mine_server/Mine_server/server_save_loop.sh'
      
      - name: filebrowser output
        run: |
          cat /home/runner/work/Mine_server/Mine_server/filebrowser.log

      # - name : Install openvpn
      #   run: |
      #     sudo apt update && sudo apt install -y openvpn openvpn-systemd-resolved
      #     echo "${{ secrets.TUNNEL }}" > /home/runner/work/Mine_server/Mine_server/Moksh1.first.ovpn
      
      # - name : connect to portmap
      #   uses: kota65535/github-openvpn-connect-action@v3.1.0
      #   with:
      #     config_file: /home/runner/work/Mine_server/Mine_server/Moksh1.first.ovpn
      
      # - name : remove ovpn
      #   run: |
      #     rm -f Moksh1.first.ovpn

      - name: Save secret_key from secrets
        run: |
          printf 'secret_key = "%s"\n' "${{ secrets.PLAYIT_GG_KEY }}" > /home/runner/work/Mine_server/Mine_server/playit.toml

      - name : playit.gg setup
        run: |
          /home/runner/work/Mine_server/Mine_server/playit-linux-amd64 --secret_wait --secret_path /home/runner/work/Mine_server/Mine_server/playit.toml > /home/runner/work/Mine_server/Mine_server/playit.log 2>&1 &
          sleep 5
          rm -f playit.toml
      
      - name : Install open ssh
        run: sudo apt install openssh-client

      - name: Setup rcon commands
        run: |
          screen -dmS rcon bash -c 'sleep 60; mcrcon -H 127.0.0.1 -P 25575 -p 1969 "say Hello world !"; mcrcon -H 127.0.0.1 -P 25575 -p 1969 "op mokshraj"; sleep 4h 55m; mcrcon -H 127.0.0.1 -P 25575 -p 1969"say server restart in 5 minutes";sleep 2m;mcrcon -H 127.0.0.1 -P 25575 -p 1969"say server restart in 3 minutes"; sleep 2m; mcrcon -H 127.0.0.1 -P 25575 -p 1969"say server restarts in 1 minute";sleep 60; mcrcon -H 127.0.0.1 -P 25575 -p 1969"stop"'
      
      - name: Screen Session check
        run: |
          sleep 5
          pwd
          screen -ls
          cat /home/runner/work/Mine_server/Mine_server/playit.log

      - name: Run Minecraft server
        run: |
          java -jar server.jar
        
      - name: Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Using the built-in GITHUB_TOKEN
        run: |
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
          git status
          git rm --ignore-unmatch /home/runner/work/Mine_server/Mine_server/master.zip
          git status
          git rm --ignore-unmatch /home/runner/work/Mine_server/Mine_server/localtonet-linux-x64.zip
          git status
          git add .
          git status
          git commit -m "server save"
          git status
          git push origin master
          git status
        
      - name: Initialise Keep_alive
        env:
          GITHUB_TOKEN: ${{ secrets.TARGET_REPO_PAT }}
        run: |
          git clone https://x-access-token:${GITHUB_TOKEN}@github.com/backup-mokshraj/Keep_alive.git
          git status
          cd Keep_alive
          git status
          git commit --allow-empty -m "Inialise Keep_Alive"
          git status
          git push origin master
          git status
